Bienvenid@ al repositorio de retos propuestos por la Universidad Nacional de Colombia, 
en el marco del Ciclo 1 del programa de formación de Programación de Software, 
Misión Tic 2022.

** Ciclo 1 - Python
En el ciclo 1 se impartieron los fundamentos de la programación 
de software utilizando Python, iniciando con los tipos de datos, 
funciones, estructuras condicionales, estructuras de datos y librerías. 

Los retos fueron diseñados de tal manera que se pudieran realizar con los conocimientos 
aprendidos durante el transcurso del ciclo.

*** Listado de Retos:

- [[file:./Retos/Reto_1/][Reto 1]]
- [[file:./Retos/Reto_2][Reto 2]]
- [[file:./Retos/Reto_3][Reto 3]]
- [[file:./Retos/Reto_4][Reto 4]]
- [[file:./Retos/Reto_5][Reto 5]]


** ¿Qué es Python?

Python es un lenguaje de programación creado por [[https://en.wikipedia.org/wiki/Guido_van_Rossum][Guido Van Rossum]], con una sintaxis muy limpia, ideado para enseñar a la gente a programar bien. Se trata de un lenguaje interpretado o de script.

*** Ventajas:

- *Legible:* sintaxis intuitiva y estricta.
- *Productivo:* ahorra mucho código.
- *Portable:* para todo sistema operativo.
- *Recargado:* viene con muchas librerías por defecto.

Editor recomendado : [[https://www.sublimetext.com/][Sublime Text]]

*** Instalación:

Existen dos versiones de Python que tienen gran uso actualmente, Python 2.x y Python 3.x, para este curso necesitas usar una versión 3.x

Para instalar Python solo debes seguir los pasos dependiendo del sistema operativo que tengas instalado.

*Windows:*
 para instalar Python en Windows ve al sitio [[https://www.python.org/downloads/][https://www.python.org/downloads/]] y presiona sobre el botón Download Python 3.7.3

Se descargará un archivo de instalación con el nombre python-3.7.3.exe , ejecútalo. Y sigue los pasos de instalación.

Al finalizar la instalación haz lo siguiente para corroborar una instalación correcta:

- Presiona las teclas Windows + R para abrir la ventana de Ejecutar.
- Una vez abierta la ventana Ejecutar escribe el comando cmd y presiona ctrl+shift+enter para ejecutar una línea de comandos con permisos de administrador.
- Windows te preguntará si quieres abrir el Procesador de comandos de Windows con permisos de administrador, presiona sí.
- En la línea de comandos escribe python.

Tu consola se mostrará así.:

[[https://static.platzi.com/media/user_upload/Captura%20de%20pantalla%20%2817%29-4a934aae-8602-4783-8510-f7bdbbded60d.jpg]]

*Linux:*
 generalmente Linux ya lo trae instalado, para comprobarlo puedes ejecutar en la terminal el comando:

*Versión 2.7:* =python -v= ó
*Versión 3.x:* =python3 -v=

Si el comando arroja un error quiere decir que no lo tienes instalado, en ese caso los pasos para instalarlo cambian un poco de acuerdo con la distribución de linux que estés usando. Generalmente el gestor de paquetes de la distribución de Linux tiene el paquete de Python

Si eres usuario de Ubuntu o Debian por ejemplo puedes usar este comando para instalar la versión 3.1:

#+BEGIN_SRC
$ sudo apt-get install python3.1
#+END_SRC

Si eres usuario de Red Hat o Centos por ejemplo puedes usar este comando para instalar python:

#+BEGIN_SRC
$ sudo yum install python
#+END_SRC

Si eres usuario habitual de linux también puedes [[https://www.python.org/downloads/source/][descargar los archivos]] para instalarlo manualmente.

** Antes de empezar:

Para usar Python debemos tener un editor de texto abierto y una terminal o cmd (línea de comandos en Windows) como administrador.

No le tengas miedo a la consola, la consola es tu amiga.

Para ejecutar Python abre la terminal y escribe:

#+BEGIN_SRC
python
#+END_SRC

Te abrirá una consola de Python, lo notarás porque el prompt cambia y ahora te muestra tres simbolos de mayor que “ >>> “ y el puntero adelante indicando que puedes empezar a ingresar comandos de python.

#+BEGIN_SRC
 >>> 
#+END_SRC

En éste modo puedes usar todos los comandos de Python o escribir código directamente.

Si deseas ejecutar código de un archivo sólo debes guardarlo con extension.py y luego ejecutar en la terminal:

#+BEGIN_SRC
$ python archivo.py
#+END_SRC

Ten en cuenta que para ejecutar el archivo con extensión “.py” debes estar ubicado en el directorio donde tienes guardado el archivo.

*Para salir de Python* y regresar a la terminal debes usar el comando exit()

Cuando usamos Python debemos atender ciertas reglas de la comunidad para definir su estructura. Las encuentras en el libro [[https://www.python.org/dev/peps/pep-0008/][PEP8]].

** Tipos de datos en Python

- *Enteros (int):* en este grupo están todos los números, enteros y long:

#+BEGIN_SRC
ejemplo: 1, 2.3, 2121, 2192, -123
#+END_SRC

- *Booleanos (bool):* Son los valores falso o verdadero, compatibles con todas las operaciones booleanas ( and, not, or ):

#+BEGIN_SRC
ejemplo: True, False
#+END_SRC

- *Cadenas (str):* Son una cadena de texto :

#+BEGIN_SRC
ejemplos: “Hola”, “¿Cómo estas?”
#+END_SRC

- *Listas:* Son un grupo o array de datos, puede contener cualquiera de los datos anteriores:

#+BEGIN_SRC
ejemplos: [1,2,3, ”hola” , [1,2,3] ], [1,“Hola”,True ]
#+END_SRC

- *Diccionarios:* Son un grupo de datos que se acceden a partir de una clave:

#+BEGIN_SRC
ejemplo: {“clave”:”valor”}, {“nombre”:”Fernando”}
#+END_SRC

- *Tuplas:* también son un grupo de datos igual que una lista con la diferencia que una tupla después de creada no se puede modificar.

#+BEGIN_SRC
ejemplos: (1,2,3, ”hola” , (1,2,3) ), (1,“Hola”,True ) (Pero jamás podremos cambiar los elementos dentro de esa Tupla)
#+END_SRC

En Python trabajas con =módulos= y =ficheros= que usas para importar las librerías.

** Funciones

Las funciones las defines con def junto a un nombre y unos paréntesis que reciben los parámetros a usar. Terminas con dos puntos.

*def nombre_de_la_función(parametros):*

Después por indentación colocas los datos que se ejecutarán desde la función:

#+BEGIN_SRC
 >>> def my_first_function():
 ...	return “Hello World!” 
 ...    
 >>> my_first_function()
#+END_SRC

Hello World!


